<!doctype html>
<html lang="ko">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>PRN — PR테크 뉴스 브리핑</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="icon" href="data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 64 64'><rect width='64' height='64' fill='%23005bac'/><text x='50%25' y='50%25' dominant-baseline='central' text-anchor='middle' font-family='Inter, Noto Sans KR, Arial' font-size='28' fill='white'>PRN</text></svg>'>
  <style>
    @media print { .noprint { display:none } body { font-size:12px } }
    .prose strong { font-weight:700 }
    .prose ul { list-style: disc; margin-left:1rem }
  </style>
</head>
<body class="bg-white text-gray-900">
  <header class="border-b sticky top-0 bg-white/80 backdrop-blur z-10">
    <div class="max-w-4xl mx-auto px-4 py-3 flex items-center justify-between gap-3">
      <h1 class="text-xl font-semibold tracking-tight">PRN <span class="ml-2 text-xs text-gray-500 hidden sm:inline">리포터 피알이 — PR테크 뉴스 브리핑</span></h1>
      <div class="flex items-center gap-2 noprint">
        <input id="dateInput" type="date" class="border rounded-lg px-3 py-1.5 text-sm" />
        <button id="todayBtn" class="border rounded-lg px-2.5 py-1.5 text-sm">오늘</button>
        <button id="yesterdayBtn" class="border rounded-lg px-2.5 py-1.5 text-sm">전일</button>
        <button id="dayBeforeBtn" class="border rounded-lg px-2.5 py-1.5 text-sm">전전일</button>
      </div>
    </div>
  </header>

  <main class="max-w-4xl mx-auto px-4 py-6">
    <section id="summary" class="mb-6 hidden">
      <div class="grid grid-cols-3 gap-3">
        <div class="rounded-2xl border p-4"><div class="text-xs text-gray-500">상태</div><div class="text-2xl font-semibold" id="statusText">-</div></div>
        <div class="rounded-2xl border p-4"><div class="text-xs text-gray-500">브리핑 수</div><div class="text-2xl font-semibold" id="selectedCount">0</div></div>
        <div class="rounded-2xl border p-4"><div class="text-xs text-gray-500">카테고리</div><div class="text-sm" id="categoryBadges"></div></div>
      </div>
    </section>

    <section class="noprint mb-4">
      <input id="searchInput" placeholder="검색(제목/요약/출처)" class="w-full border rounded-xl px-4 py-2" />
      <p class="text-xs text-gray-500 mt-1">* 포항·광양·POSCO 키워드가 포함된 기사는 자동 상단 노출됩니다.</p>
    </section>

    <section id="tabs" class="mb-4 hidden noprint">
      <div class="flex flex-wrap gap-2" id="tabButtons"></div>
    </section>

    <section id="content"></section>

    <section id="rawMdBlock" class="hidden">
      <article class="prose prose-sm max-w-none border rounded-2xl p-4">
        <h3 class="font-semibold">모델 생성 브리핑(원문)</h3>
        <div id="rawMd" class="mt-2 text-sm leading-6"></div>
      </article>
    </section>

    <section id="emptyState" class="hidden">
      <div class="border rounded-2xl p-8 text-center text-gray-600">해당 일자의 브리핑이 없습니다. 다른 날짜를 선택해 주세요.</div>
    </section>

    <section id="errorState" class="hidden">
      <div class="border rounded-2xl p-8 text-center text-red-600">데이터를 불러오지 못했습니다. 네트워크 또는 데이터 파일을 확인해 주세요.</div>
    </section>

    <section id="loading" class="text-center py-12">로딩 중…</section>
  </main>

  <footer class="max-w-4xl mx-auto px-4 py-8 text-xs text-gray-500">
    <div>ⓒ PR테크 · PRN(내부용). 원문 링크는 외부 사이트로 연결됩니다.</div>
  </footer>

  <script>
    // ====== 유틸: 오늘(한국) 날짜 ======
    function dateKST(offsetDays=0){
      const now = new Date();
      const kst = new Date(now.getTime() + (9*60 + now.getTimezoneOffset())*60000);
      kst.setDate(kst.getDate() + offsetDays);
      return kst.toISOString().slice(0,10);
    }

    // 간단 마크다운 렌더 (**bold**, 줄바꿈)만 처리
    function renderMD(md){
      if(!md) return '';
      return md
        .replace(/\*\*(.*?)\*\*/g, '<strong>$1<\/strong>')
        .replace(/\n/g, '<br/>');
    }

    const PREF_ORDER = ["철강경제","포스코그룹","정비 로봇·AI정비","보충"];
    const PRIORITY_KEYWORDS = [/포항/i,/광양/i,/POSCO|포스코/i];

    // ====== 엘리먼트 ======
    const dateInput = document.getElementById('dateInput');
    const todayBtn = document.getElementById('todayBtn');
    const yesterdayBtn = document.getElementById('yesterdayBtn');
    const dayBeforeBtn = document.getElementById('dayBeforeBtn');
    const loading = document.getElementById('loading');
    const emptyState = document.getElementById('emptyState');
    const errorState = document.getElementById('errorState');
    const content = document.getElementById('content');
    const summary = document.getElementById('summary');
    const tabs = document.getElementById('tabs');
    const tabButtons = document.getElementById('tabButtons');
    const selectedCount = document.getElementById('selectedCount');
    const statusText = document.getElementById('statusText');
    const categoryBadges = document.getElementById('categoryBadges');
    const searchInput = document.getElementById('searchInput');
    const rawMdBlock = document.getElementById('rawMdBlock');
    const rawMd = document.getElementById('rawMd');

    // ====== 상태 ======
    let currentData = null;
    let activeCategory = null;

    // 초기 날짜 세팅
    dateInput.value = dateKST(0);

    // 버튼 이벤트
    todayBtn.onclick = ()=>{ dateInput.value = dateKST(0); loadSequence(); };
    yesterdayBtn.onclick = ()=>{ dateInput.value = dateKST(-1); load(); };
    dayBeforeBtn.onclick = ()=>{ dateInput.value = dateKST(-2); load(); };
    dateInput.onchange = load;
    searchInput.oninput = ()=> render();

    // ====== 렌더 보조 ======
    function pick(v){ return v || []; }
    function scorePriority(it){
      const hay = `${it.title||''} ${it.summary_md||''}`;
      return PRIORITY_KEYWORDS.some(rx => rx.test(hay)) ? 1 : 0;
    }
    function buildTabs(keys){
      tabButtons.innerHTML = '';
      keys.forEach(k=>{
        const btn = document.createElement('button');
        btn.className = 'px-3 py-1.5 border rounded-xl text-sm';
        btn.textContent = k;
        btn.onclick = ()=>{ activeCategory=k; render(); };
        tabButtons.appendChild(btn);
      });
      tabs.classList.toggle('hidden', keys.length===0);
    }

    function renderSummary(){
      if(!currentData) return;
      const byCat = (currentData.counts && currentData.counts.byCategory) || {};
      selectedCount.textContent = currentData.counts?.selected ?? 0;
      statusText.textContent = currentData.status || '-';
      categoryBadges.innerHTML = PREF_ORDER.map(k => {
        const n = byCat[k]||0;
        return `<span class="inline-flex items-center gap-1 border rounded-lg px-2 py-0.5 mr-1 mb-1 text-xs">${k}<span class="font-semibold">${n}</span></span>`;
      }).join('');
      summary.classList.remove('hidden');
    }

    function render(){
      if(!currentData){ return; }
      const q = (searchInput.value||'').trim().toLowerCase();

      // raw_markdown 표시 여부
      if(currentData.raw_markdown){
        rawMdBlock.classList.remove('hidden');
        rawMd.innerHTML = renderMD(currentData.raw_markdown);
      } else {
        rawMdBlock.classList.add('hidden');
      }

      // 탭 구성
      const cats = PREF_ORDER.filter(k => currentData.items && currentData.items[k] && currentData.items[k].length>0);
      buildTabs(cats);
      if(!activeCategory){ activeCategory = cats[0] || null; }

      // 콘텐츠
      content.innerHTML = '';
      if(!activeCategory){
        emptyState.classList.remove('hidden');
        return;
      } else {
        emptyState.classList.add('hidden');
      }

      const raw = pick(currentData.items[activeCategory]);
      const filtered = raw
        .slice()
        .sort((a,b)=> scorePriority(b)-scorePriority(a) || (a.position||0)-(b.position||0))
        .filter(it=>{
          if(!q) return true;
          const hay = `${it.title} ${it.source} ${it.summary_md||''}`.toLowerCase();
          return hay.includes(q);
        });

      if(filtered.length===0){
        content.innerHTML = '<div class="text-gray-500">해당 탭에 표시할 항목이 없습니다.</div>';
        return;
      }

      filtered.forEach(it=>{
        const card = document.createElement('article');
        card.className = 'border rounded-2xl p-4 mb-3';
        const safeUrl = it.url || '#';
        card.innerHTML = `
          <h3 class="font-semibold">
            <span class="mr-2">${it.title || ''}</span>
            <span class="text-xs text-gray-500">(${it.source || ''}, ${it.date || ''})</span>
            ${safeUrl && safeUrl !== '#' ? `<a class="text-xs text-blue-600 underline ml-2" href="${safeUrl}" target="_blank" rel="noopener noreferrer">[원문]</a>` : ''}
          </h3>
          <div class="mt-2 text-sm leading-6">${renderMD(it.summary_md || '')}</div>
        `;
        content.appendChild(card);
      });

      renderSummary();
    }

    async function fetchJson(date){
      const url = `./data/${date}.json`; // 프로젝트 페이지에서도 동작하도록 상대경로 사용
      const res = await fetch(url, { cache: 'no-store' });
      if(!res.ok) throw new Error('HTTP '+res.status);
      return res.json();
    }

    async function load(){
      const date = dateInput.value;
      loading.classList.remove('hidden');
      errorState.classList.add('hidden');
      emptyState.classList.add('hidden');
      content.innerHTML = '';
      tabs.classList.add('hidden');
      summary.classList.add('hidden');
      activeCategory = null;
      try{
        currentData = await fetchJson(date);
        loading.classList.add('hidden');
        if(!currentData){ emptyState.classList.remove('hidden'); return; }
        // counts가 없을 수 있으니 최소 구조 보정
        currentData.counts = currentData.counts || { selected: 0, byCategory: {} };
        render();
      }catch(e){
        loading.classList.add('hidden');
        errorState.classList.remove('hidden');
        console.error('데이터 로드 실패:', e);
      }
    }

    // 오늘 데이터 없으면 전일→전전일로 한 번씩 자동 시도
    async function loadSequence(){
      const tryDates = [dateKST(0), dateKST(-1), dateKST(-2)];
      for(const d of tryDates){
        dateInput.value = d;
        try{
          await load();
          if(!errorState.classList.contains('hidden')) continue;
          if(!emptyState.classList.contains('hidden')) continue;
          return; // 성공
        }catch(_){/* ignore */}
      }
      // 모두 실패 시 빈 상태 노출
      emptyState.classList.remove('hidden');
    }

    // 초기 로드
    loadSequence();
  </script>
</body>
</html>
